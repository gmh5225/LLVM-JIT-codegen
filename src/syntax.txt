module ModuleName 1; // 1-version
condition {
    preconditions
}
substitute {
    list of modules this one can substitute
}
import {
    OtherModuleName 42;   // 42-required version
    OtherModuleName2 11;
}

class ClassName(TypeParam1, TypeParam2) {
    ImplementedInterface(type params) {
        implementationMethod1(params) { body }
    }
    BaseClass(type params) {
        overloadMethod(params) { body }
        overloadMethod.atom (params) { body }
    }
    newMethod(param1 type, param2 type) ResultType {
        bodyStatements
    }
    field=initializer;
}
